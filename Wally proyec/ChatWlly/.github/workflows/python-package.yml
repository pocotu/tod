# Este es un archivo de configuración de GitHub Actions que se utiliza para automatizar el proceso de desarrollo de un paquete de Python. La configuración especifica que se ejecutarán diferentes tareas cada vez que se haga un push o un pull request a la rama principal (main) del repositorio.
# 
# Las tareas incluyen:
# 
# Instalar y configurar diferentes versiones de Python (3.8, 3.9 y 3.10) en el entorno de trabajo.
# Instalar las dependencias del paquete de Python utilizando pip.
# Ejecutar flake8 para verificar el código fuente del paquete en busca de errores de sintaxis y problemas de calidad del código.
# Ejecutar pytest para realizar pruebas del paquete.
# La configuración también incluye variables de entorno para almacenar credenciales secretas (OPENAI_EMAIL y OPENAI_PASSWORD) que se utilizarán durante las pruebas.

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest
      env:
        OPENAI_EMAIL: ${{ secrets.OPENAI_EMAIL }}
        OPENAI_PASSWORD: ${{ secrets.OPENAI_PASSWORD }}
